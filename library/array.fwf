
null = as 0 ptr
one = as 1 ptr
guard
import one
ovflow = "Array overflow."

alias void memcpy(a:listbyte b:listbyte c:uint)
alias void memcpy(a:listubyte b:listubyte c:uint)
function int access_word(list:listint index:uint) {
	index = ? index //turn it into a usable index
	if < index deref_uint$ - as list ptr one {
		return deref_int$ + as list ptr index
	} {
		error$ ovflow
	}
	return 0
}

alias ubyte access_byte(a:listubyte a:uint)
function byte access_byte(list:listbyte index:uint) {
	if < index deref_uint$ - as list ptr one {
		return deref_byte$ + as list ptr index
	} {
		error$ ovflow
	}
	return 0b
}

alias uint access_word(a:listuint index:uint)
alias ptr access_word(a:listptr index:uint)


function listbyte double_len(a:listbyte) {
	b = as malloc$ << sizeof$ a listbyte
	memcpy$ b a sizeof$ a
	free$ a
	return b
}
