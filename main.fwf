guard
import stdin

extern void terminal_mode_raw()
extern void terminal_mode_default()

lowercase = ['a','z']
uppercase = ['A','Z']
function int control_modified(keycode:ubyte) {
	if in keycode lowercase {
		return @int - + keycode 1ub 'a'
	} ;
	if in keycode uppercase {
		return - @int keycode 64
	} ;
	return 3
}


function int puts_alias(str:ptr) {
	puts$ str
	return 0
}





function int main() {

	puts$ "number 1: "
	x = stdin.next_int$
	puts$ "number 2: "
	y = stdin.next_int$
	puts$ "number 3: "
	z = stdin.next_int$

	temp i = String$ "number 1"
	temp j = String$ "number 2"
	temp k = String$ "number 3"

	temp combiner = String$ " + "
	temp stringlist = [i j k]
	temp result = combiner.join$ stringlist
	println$ result.backinglist


	puts$ "the sum is: "
	puti$ + x + y z
	putln$
	return 0
}



exit_code = main$

//free$ recycles memory to be used later in fhidwfe. download_more_ram$ returns unused memory to the OS

download_more_ram$
//dump_malloc_page$
return exit_code

